# ---
 
- name: set fact mongo_type=mongo_cs
  set_fact: mongo_type=mongo_cs
  
- name: set mongo_cs port
  set_fact: mongod_port="{{ mongo_cs_port }}"
 
- name: Create config server data directory
  file: path="{{ mongod_datadir_prefix }}/{{ mongo_type }}" owner=mongodb group=mongodb state=directory

- name: Create the mongo_cs init file for Debian
  template: src=mongod_debian_init.j2 dest=/etc/init.d/mongo_cs mode=755
  when: ansible_os_family == "Debian"

- name: Enable mongo_cs service  
  command: "{{ item }}"
  with_items:
    - update-rc.d mongo_cs defaults
    - update-rc.d mongo_cs enable 
  when: ansible_os_family == "Debian"

- name: set fact mongod_auth=false
  set_fact: mongod_auth=false

- name: generate the mongo config server configuration file
  template: src=mongod.conf.j2 dest=/etc/mongo_cs.conf

- name: create the user JS to create root user
  template: src=user.j2 dest=/tmp/user.js

- name: Start the mongo_cs service for redhat variants to add root user
  command: creates=/var/lock/subsys/mongo_cs /etc/init.d/mongo_cs start
  when: ansible_os_family == "RedHat"

- name: Start the mongo_cs service for Ubuntu variants to add root user
  service: name=mongo_cs state=started
  when: ansible_os_family == "Debian"

- name: Pause for a 60 secs to ensure mongo_cs is running
  pause: seconds=60

- name: Add root user
  shell: "/usr/bin/mongo --port {{ mongo_cs_port }} admin /tmp/user.js"

- name: set auth to true after users added
  set_fact: mongod_auth=true

- name: generate the mongo config server configuration file
  template: src=mongod.conf.j2 dest=/etc/mongo_cs.conf

- name: Start the mongo_cs service for redhat variants
  command: creates=/var/lock/subsys/mongo_cs /etc/init.d/mongo_cs restart
  when: ansible_os_family == "RedHat"

- name: Restart the mongo_cs service for Ubuntu variants
  service: name=mongo_cs state=restarted
  when: ansible_os_family == "Debian"

- name: Pause for 60 
  pause: seconds=60
